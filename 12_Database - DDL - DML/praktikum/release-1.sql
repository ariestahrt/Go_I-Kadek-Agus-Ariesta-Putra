# 2. Dari schema Olshop yang telah kamu kerjakan di, Implementasikanlah menjadi table pada MySQL
## A: BUAT TABEL PELANGGAN
CREATE TABLE PELANGGAN(
    ID INT PRIMARY KEY,
    NAMA VARCHAR(255) NOT NULL,
    ALAMAT VARCHAR(255) NOT NULL,
    TANGGAL_LAHIR DATE NOT NULL,
    STATUS VARCHAR(255) NOT NULL,
    JENIS_KELAMIN CHAR(1) NOT NULL,
    CREATED_AT TIMESTAMP,
    UPDATED_AT TIMESTAMP
);

## B: BUAT TABEL product, product type, operators, product description, payment_method.
# BUAT TIPE_PRODUK
CREATE TABLE TIPE_PRODUK ( 
	ID INT PRIMARY KEY, 
	TIPE VARCHAR(255) NOT NULL,
	CREATED_AT TIMESTAMP,
	UPDATED_AT TIMESTAMP
);

# BUAT OPERATOR
CREATE TABLE OPERATOR ( 
	ID INT PRIMARY KEY,
	NAMA VARCHAR(255) NOT NULL,
	IS_PRABAYAR TINYINT(1) NOT NULL,
	CREATED_AT TIMESTAMP,
	UPDATED_AT TIMESTAMP
);

# BUAT DESKRIPSI PRODUK
CREATE TABLE DESKRIPSI_PRODUK ( 
	ID INT PRIMARY KEY,
	DESKRIPSI LONGTEXT NOT NULL,
	CREATED_AT TIMESTAMP,
	UPDATED_AT TIMESTAMP
);

# BUAT TABEL PRODUK DAN SEKALIAN FK-NYA
CREATE TABLE PRODUK ( 
	ID INT PRIMARY KEY,
	ID_OPERATOR INT,
	ID_TIPE INT,
	ID_DESKRIPSI_PRODUK INT,
	NAMA VARCHAR(255) NOT NULL,
	HARGA INT NOT NULL, 
	CREATED_AT TIMESTAMP,
	UPDATED_AT TIMESTAMP,
	CONSTRAINT FK_TIPE_P FOREIGN KEY (ID_TIPE) REFERENCES TIPE_PRODUK(ID), 
	CONSTRAINT FK_OPERATOR_P FOREIGN KEY (ID_OPERATOR) REFERENCES OPERATOR(ID), 
	CONSTRAINT FK_DESKRIPSI_P FOREIGN KEY (ID_DESKRIPSI_PRODUK) REFERENCES DESKRIPSI_PRODUK(ID)
);

# BUAT TABEL PAYMENT METHOD
CREATE TABLE METODE_BAYAR ( 
	ID INT PRIMARY KEY,
	NAMA VARCHAR(255) NOT NULL,
	IS_TUNAI TINYINT(1) NOT NULL,
	CREATED_AT TIMESTAMP,
	UPDATED_AT TIMESTAMP
);

## C: BUAT TABEL TRANSCATION, TRANSACTION_DETAIL
# BUAT TABEL TRANSAKSI
CREATE TABLE TRANSAKSI ( 
	ID INT PRIMARY KEY,
	ID_PELANGGAN INT,
	ID_MB INT,
	IS_LUNAS TINYINT(1) NOT NULL,
	TOTAL INT NOT NULL, 
	CREATED_AT TIMESTAMP,
	UPDATED_AT TIMESTAMP,
	CONSTRAINT FK_PELANGGAN_T FOREIGN KEY (ID_PELANGGAN) REFERENCES PELANGGAN(ID), 
	CONSTRAINT FK_METODEBAYAR_T FOREIGN KEY (ID_MB) REFERENCES METODE_BAYAR(ID)
);

# BUAT TABEL DETAIL_TRANSAKSI
CREATE TABLE DETAIL_TRANSAKSI ( 
	ID INT PRIMARY KEY,
	ID_TRANSAKSI INT,
	ID_PRODUK INT,
	BANYAKNYA INT NOT NULL, 
	CREATED_AT TIMESTAMP,
	UPDATED_AT TIMESTAMP,
	CONSTRAINT FK_PRODUK_DT FOREIGN KEY (ID_PRODUK) REFERENCES PRODUK(ID), 
	CONSTRAINT FK_TRANSAKSI_DT FOREIGN KEY (ID_TRANSAKSI) REFERENCES TRANSAKSI(ID)
);

# 3. BUAT TABEL KURIR
CREATE TABLE KURIR ( 
	ID INT PRIMARY KEY,
	NAMA VARCHAR(255) NOT NULL,
	CREATED_AT TIMESTAMP,
	UPDATED_AT TIMESTAMP
);

# 4. TAMBAHKAN ONGKOS_DASAR PADA KURIR
ALTER TABLE KURIR 
ADD ( 
    ONGKOS_DASAR INT
);

# 5. GANTI KURIR MENJADI SHIPPING
ALTER TABLE KURIR RENAME TO SHIPPING;

SELECT * FROM SHIPPING;

# 6. HAPUS TABLE SHIPPING
DROP TABLE SHIPPING;

# 7. Silahkan menambahkan entity baru dengan relation 1-to-1, 1-to-many, many-to-many.

## 1. 1-to-1
# BUAT DEKSRIPSI METODE BAYAR
CREATE TABLE DESKRIPSI_METODE_BAYAR ( 
	ID INT PRIMARY KEY,
	ID_MB INT NOT NULL UNIQUE,
	DEKSRIPSI LONGTEXT NOT NULL,
	CREATED_AT TIMESTAMP,
	UPDATED_AT TIMESTAMP,
	CONSTRAINT FK_METODEBAYAR_DMB FOREIGN KEY (ID_MB) REFERENCES METODE_BAYAR(ID) 
);

## b. 1-to-many
# HAPUS KOLOM ALAMAT PADA PELANGGAN
ALTER TABLE PELANGGAN DROP COLUMN ALAMAT;

# BUAT TABEL ALAMAT DAN HUBUNGKAN KE PELANGGAN
CREATE TABLE ALAMAT ( 
	ID INT PRIMARY KEY,
	ID_PELANGGAN INT,
	LABEL_ALAMAT VARCHAR(255) NOT NULL,
	JALAN VARCHAR(255) NOT NULL,
	KECAMATAN VARCHAR(255) NOT NULL,
	KABUPATEN VARCHAR(255) NOT NULL,
	PROVINSI VARCHAR(255) NOT NULL,
	KODE_POS VARCHAR(10) NOT NULL,
	CREATED_AT TIMESTAMP,
	UPDATED_AT TIMESTAMP,
	CONSTRAINT FK_PELANGGAN_A FOREIGN KEY (ID_PELANGGAN) REFERENCES PELANGGAN(ID)
);

## c. many-to-many. Misalkan user dengan metode bayar memiliki suer detail metode bayar
# BUAT TABEL DETAIL_PELANGGAN_METODE_BAYAR
CREATE TABLE DETAIL_PELANGGAN_METODE_BAYAR ( 
	ID INT PRIMARY KEY,
	ID_PELANGGAN INT,
	ID_METODE_BAYAR INT,
	KETERANGAN VARCHAR(255), 
	CREATED_AT TIMESTAMP,
	UPDATED_AT TIMESTAMP,
	CONSTRAINT FK_PELANGGAN_DPMT FOREIGN KEY (ID_PELANGGAN) REFERENCES PELANGGAN(ID), 
	CONSTRAINT FK_METODEBAYAR_DPMT FOREIGN KEY (ID_METODE_BAYAR) REFERENCES METODE_BAYAR(ID)
);